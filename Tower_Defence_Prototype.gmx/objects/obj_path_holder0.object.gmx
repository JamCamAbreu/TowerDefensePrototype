<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mouse_tip</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//USE ROOM SPECIFIC CREATION CODE TO CREATE THIS ON TOP OF THE FIRST PATH!

alarm[0] = 5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//this logic only works with one path currently


var total_path;
total_path = instance_number(obj_tile_parent);

var starting_number;





//path0
var path0_total;

if (!global.spawner_1_exists) {
    path0_total = instance_number(obj_tile_parent);
    
} else path0_total = global.path0_tiles_total; //set in the room creation event



//starting point for counting
if (global.spawner_1_exists){
    if (global.path1_tiles_total &gt; global.path0_tiles_total)
        starting_number = global.path1_tiles_total - global.path0_tiles_total;
    else starting_number = 0;
} else starting_number = 0; //if the spawner_1 does not exist



for (i = starting_number; i &lt;= (path0_total + starting_number); i++) {

    if (place_meeting(x,y, obj_tile_parent)) {
        
        var current_tile = instance_position(x,y,obj_tile_parent);
        current_tile.path0_sequence = i; //set that objects sequence to being 0;
        
        current_tile.has_path_sequence = true;
        
        
        
        //now move the object to the next tile-------------------
        var move_distance = 64;
        
        
        if (place_meeting(x, y, obj_tile_right)) {
            x += move_distance;
            y += 0;
        }
        
        else if (place_meeting(x, y, obj_tile_down)) {
            y += move_distance;
            x += 0; 
        }
        
        else if (place_meeting(x, y, obj_tile_left)) {
            x -= move_distance;
            y += 0;
        }
        
        else if (place_meeting(x, y, obj_tile_up)) {
            y -= move_distance;
            x += 0;
        }
        
        //corners----------------
        
        //move down
        else if (place_meeting(x, y, obj_tile_leftdown)) || (place_meeting(x, y, obj_tile_rightdown)) {
            y += move_distance;
            x += 0;
        }
        
        //move left
        else if (place_meeting(x, y, obj_tile_downleft)) || (place_meeting(x, y, obj_tile_upleft)) {
            y += 0;
            x -= move_distance;
        }
        
        //move right
        else if (place_meeting(x, y, obj_tile_downright)) || (place_meeting(x, y, obj_tile_upright)) {
            y += 0;
            x += move_distance;
        }
        
        //move up
        else if (place_meeting(x, y, obj_tile_leftup)) || (place_meeting(x, y, obj_tile_rightup)) {
            y -= move_distance;
            x += 0;
        }   
    }
}//end of path0 logic









//if there is a path1, do the following:--------------------------------------------------------------
if (global.spawner_1_exists){

    var path1_total;
    
    path1_total = global.path1_tiles_total;

    x = obj_spawner_1.path_holder_start_x;
    y = obj_spawner_1.path_holder_start_y;
    
    
    //starting point for counting
    if (global.path0_tiles_total &gt; global.path1_tiles_total)
        starting_number = global.path0_tiles_total - global.path1_tiles_total;
    else starting_number = 0;
    
    for (i = starting_number; i &lt;= (path1_total + starting_number); i++) {

    
        if (place_meeting(x,y, obj_tile_parent)) {
            
            var current_tile = instance_position(x,y,obj_tile_parent);
            current_tile.path0_sequence = i; //set that objects sequence to being 0;
            
            current_tile.has_path_sequence = true;
            
            
            
            //now move the object to the next tile-------------------
            var move_distance = 64;
            
            
            if (place_meeting(x, y, obj_tile_right)) {
                x += move_distance;
                y += 0;
            }
            
            else if (place_meeting(x, y, obj_tile_down)) {
                y += move_distance;
                x += 0; 
            }
            
            else if (place_meeting(x, y, obj_tile_left)) {
                x -= move_distance;
                y += 0;
            }
            
            else if (place_meeting(x, y, obj_tile_up)) {
                y -= move_distance;
                x += 0;
            }
            
            //corners----------------
            
            //move down
            else if (place_meeting(x, y, obj_tile_leftdown)) || (place_meeting(x, y, obj_tile_rightdown)) {
                y += move_distance;
                x += 0;
            }
            
            //move left
            else if (place_meeting(x, y, obj_tile_downleft)) || (place_meeting(x, y, obj_tile_upleft)) {
                y += 0;
                x -= move_distance;
            }
            
            //move right
            else if (place_meeting(x, y, obj_tile_downright)) || (place_meeting(x, y, obj_tile_upright)) {
                y += 0;
                x += move_distance;
            }
            
            //move up
            else if (place_meeting(x, y, obj_tile_leftup)) || (place_meeting(x, y, obj_tile_rightup)) {
                y -= move_distance;
                x += 0;
            }
            
        }
    
    }
}//end of path1 logic


instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_circle_colour(x,y,26,c_red, c_red, false);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
